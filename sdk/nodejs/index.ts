// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { LocalStateReferenceArgs, LocalStateReferenceResult, LocalStateReferenceOutputArgs } from "./localStateReference";
export const localStateReference: typeof import("./localStateReference").localStateReference = null as any;
export const localStateReferenceOutput: typeof import("./localStateReference").localStateReferenceOutput = null as any;
utilities.lazyLoad(exports, ["localStateReference","localStateReferenceOutput"], () => require("./localStateReference"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { RemoteStateReferenceArgs, RemoteStateReferenceResult, RemoteStateReferenceOutputArgs } from "./remoteStateReference";
export const remoteStateReference: typeof import("./remoteStateReference").remoteStateReference = null as any;
export const remoteStateReferenceOutput: typeof import("./remoteStateReference").remoteStateReferenceOutput = null as any;
utilities.lazyLoad(exports, ["remoteStateReference","remoteStateReferenceOutput"], () => require("./remoteStateReference"));


// Export sub-modules:
import * as types from "./types";

export {
    types,
};
pulumi.runtime.registerResourcePackage("terraform", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:terraform") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
