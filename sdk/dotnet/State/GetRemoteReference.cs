// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Terraform.State
{
    public static class GetRemoteReference
    {
        /// <summary>
        /// Access state from a remote backend.
        /// </summary>
        public static Task<GetRemoteReferenceResult> InvokeAsync(GetRemoteReferenceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRemoteReferenceResult>("terraform:state:getRemoteReference", args ?? new GetRemoteReferenceArgs(), options.WithDefaults());

        /// <summary>
        /// Access state from a remote backend.
        /// </summary>
        public static Output<GetRemoteReferenceResult> Invoke(GetRemoteReferenceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRemoteReferenceResult>("terraform:state:getRemoteReference", args ?? new GetRemoteReferenceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Access state from a remote backend.
        /// </summary>
        public static Output<GetRemoteReferenceResult> Invoke(GetRemoteReferenceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRemoteReferenceResult>("terraform:state:getRemoteReference", args ?? new GetRemoteReferenceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRemoteReferenceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The remote backend hostname to connect to.
        /// </summary>
        [Input("hostname")]
        public string? Hostname { get; set; }

        /// <summary>
        /// The name of the organization containing the targeted workspace(s).
        /// </summary>
        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        [Input("token")]
        private string? _token;

        /// <summary>
        /// The token used to authenticate with the remote backend.
        /// </summary>
        public string? Token
        {
            get => _token;
            set => _token = value;
        }

        [Input("workspaces", required: true)]
        public Inputs.Workspaces Workspaces { get; set; } = null!;

        public GetRemoteReferenceArgs()
        {
            Hostname = "app.terraform.io";
        }
        public static new GetRemoteReferenceArgs Empty => new GetRemoteReferenceArgs();
    }

    public sealed class GetRemoteReferenceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The remote backend hostname to connect to.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The name of the organization containing the targeted workspace(s).
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The token used to authenticate with the remote backend.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("workspaces", required: true)]
        public Input<Inputs.WorkspacesArgs> Workspaces { get; set; } = null!;

        public GetRemoteReferenceInvokeArgs()
        {
            Hostname = "app.terraform.io";
        }
        public static new GetRemoteReferenceInvokeArgs Empty => new GetRemoteReferenceInvokeArgs();
    }


    [OutputType]
    public sealed class GetRemoteReferenceResult
    {
        /// <summary>
        /// The outputs displayed from Terraform state.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Outputs;

        [OutputConstructor]
        private GetRemoteReferenceResult(ImmutableDictionary<string, object> outputs)
        {
            Outputs = outputs;
        }
    }
}
