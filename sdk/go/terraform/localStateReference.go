// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package terraform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform/sdk/go/terraform/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LocalStateReference(ctx *pulumi.Context, args *LocalStateReferenceArgs, opts ...pulumi.InvokeOption) (*LocalStateReferenceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LocalStateReferenceResult
	err := ctx.Invoke("terraform:index:localStateReference", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LocalStateReferenceArgs struct {
	Path string `pulumi:"path"`
}

type LocalStateReferenceResult struct {
	Outputs map[string]interface{} `pulumi:"outputs"`
}

func LocalStateReferenceOutput(ctx *pulumi.Context, args LocalStateReferenceOutputArgs, opts ...pulumi.InvokeOption) LocalStateReferenceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LocalStateReferenceResultOutput, error) {
			args := v.(LocalStateReferenceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("terraform:index:localStateReference", args, LocalStateReferenceResultOutput{}, options).(LocalStateReferenceResultOutput), nil
		}).(LocalStateReferenceResultOutput)
}

type LocalStateReferenceOutputArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
}

func (LocalStateReferenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalStateReferenceArgs)(nil)).Elem()
}

type LocalStateReferenceResultOutput struct{ *pulumi.OutputState }

func (LocalStateReferenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalStateReferenceResult)(nil)).Elem()
}

func (o LocalStateReferenceResultOutput) ToLocalStateReferenceResultOutput() LocalStateReferenceResultOutput {
	return o
}

func (o LocalStateReferenceResultOutput) ToLocalStateReferenceResultOutputWithContext(ctx context.Context) LocalStateReferenceResultOutput {
	return o
}

func (o LocalStateReferenceResultOutput) Outputs() pulumi.MapOutput {
	return o.ApplyT(func(v LocalStateReferenceResult) map[string]interface{} { return v.Outputs }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(LocalStateReferenceResultOutput{})
}
