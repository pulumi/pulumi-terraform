// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package terraform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform/sdk/go/terraform/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func RemoteStateReference(ctx *pulumi.Context, args *RemoteStateReferenceArgs, opts ...pulumi.InvokeOption) (*RemoteStateReferenceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv RemoteStateReferenceResult
	err := ctx.Invoke("terraform:index:remoteStateReference", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type RemoteStateReferenceArgs struct {
	BackendConfig BackendConfig      `pulumi:"backendConfig"`
	BackendType   string             `pulumi:"backendType"`
	Workspaces    WorkspaceStateArgs `pulumi:"workspaces"`
}

type RemoteStateReferenceResult struct {
	Outputs map[string]interface{} `pulumi:"outputs"`
}

func RemoteStateReferenceOutput(ctx *pulumi.Context, args RemoteStateReferenceOutputArgs, opts ...pulumi.InvokeOption) RemoteStateReferenceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (RemoteStateReferenceResultOutput, error) {
			args := v.(RemoteStateReferenceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("terraform:index:remoteStateReference", args, RemoteStateReferenceResultOutput{}, options).(RemoteStateReferenceResultOutput), nil
		}).(RemoteStateReferenceResultOutput)
}

type RemoteStateReferenceOutputArgs struct {
	BackendConfig BackendConfigInput      `pulumi:"backendConfig"`
	BackendType   pulumi.StringInput      `pulumi:"backendType"`
	Workspaces    WorkspaceStateArgsInput `pulumi:"workspaces"`
}

func (RemoteStateReferenceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteStateReferenceArgs)(nil)).Elem()
}

type RemoteStateReferenceResultOutput struct{ *pulumi.OutputState }

func (RemoteStateReferenceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemoteStateReferenceResult)(nil)).Elem()
}

func (o RemoteStateReferenceResultOutput) ToRemoteStateReferenceResultOutput() RemoteStateReferenceResultOutput {
	return o
}

func (o RemoteStateReferenceResultOutput) ToRemoteStateReferenceResultOutputWithContext(ctx context.Context) RemoteStateReferenceResultOutput {
	return o
}

func (o RemoteStateReferenceResultOutput) Outputs() pulumi.MapOutput {
	return o.ApplyT(func(v RemoteStateReferenceResult) map[string]interface{} { return v.Outputs }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(RemoteStateReferenceResultOutput{})
}
