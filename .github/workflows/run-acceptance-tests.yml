env:
  AWS_REGION: us-west-2
  ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
  ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
  PROVIDER: terraform
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_USERNAME: __token__
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TFE_ORGANIZATION: ${{ secrets.TFE_ORGANIZATION }}
  TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
  TRAVIS_OS_NAME: linux
jobs:
  build_sdk:
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name
      == github.repository
    name: build_sdk
    needs: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.2.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: |-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace}}/bin
        find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
    - name: Build SDK
      run: make build_${{ matrix.language }}
    - name: Check worktree clean
      run: ./ci-scripts/ci/check-worktree-is-clean
    - name: Compress SDK folder
      run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }}
        .
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 6.x
        goversion:
        - 1.21.x
        language:
        - nodejs
        - python
        - dotnet
        - go
        nodeversion:
        - 18.x
        pythonversion:
        - "3.8"
  comment-notification:
    if: github.event_name == 'repository_dispatch'
    name: comment-notification
    runs-on: ubuntu-latest
    steps:
    - id: run-url
      name: Create URL to the run output
      run: echo run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID >> "$GITHUB_OUTPUT"
    - name: Update with Result
      uses: peter-evans/create-or-update-comment@v1
      with:
        body: 'Please view the PR build: ${{ steps.run-url.outputs.run-url }}'
        issue-number: ${{ github.event.client_payload.github.payload.issue.number
          }}
        repository: ${{ github.event.client_payload.github.payload.repository.full_name
          }}
        token: ${{ secrets.PULUMI_BOT_TOKEN }}
    strategy: {}
  prerequisites:
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name
      == github.repository
    name: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.2.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
    - name: Build tfgen & provider binaries
      run: make provider
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace
        }}/bin/ pulumi-resource-${{ env.PROVIDER }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 6.x
        goversion:
        - 1.21.x
        nodeversion:
        - 18.x
        pythonversion:
        - "3.8"
  test:
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name
      == github.repository
    name: test
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.2.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@v5
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.nodeversion}}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnetversion}}
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.pythonversion}}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: Untar provider binaries
      run: |-
        tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace}}/bin
        find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print -exec chmod +x {} \;
    - run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download SDK
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.language }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress SDK folder
      run: tar -zxf ${{ github.workspace }}/sdk/${{ matrix.language }}.tar.gz -C ${{
        github.workspace }}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 3600
        role-session-name: ${{ env.PROVIDER }}@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Install dependencies
      run: make install_${{ matrix.language}}_sdk
    - name: Install gotestfmt
      uses: jaxxstorm/action-install-gh-release@v1.2.0
      with:
        repo: haveyoudebuggedit/gotestfmt
    - name: Run tests
      run: cd examples && go test -v -json -count=1 -cover -timeout 2h -tags=${{ matrix.language
        }} -parallel 4 . 2>&1 | tee /tmp/gotest.log | gotestfmt
    strategy:
      fail-fast: true
      matrix:
        dotnetversion:
        - 6.x
        goversion:
        - 1.21.x
        language:
        - nodejs
        - python
        - dotnet
        - go
        nodeversion:
        - 18.x
        pythonversion:
        - "3.8"
name: run-acceptance-tests
"on":
  pull_request:
    branches:
    - master
    paths-ignore:
    - CHANGELOG.md
  repository_dispatch:
    types:
    - run-acceptance-tests-command
